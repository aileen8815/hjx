<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
       default-lazy-init="true">

    <description>Beetle</description>

    <context:property-placeholder location="classpath*:/application.properties" ignore-resource-not-found="true" ignore-unresolvable="true"/>
    <context:component-scan base-package="com.wwyl">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <jpa:repositories base-package="com.wwyl" repository-impl-postfix="Dao"
                      factory-class="org.springframework.data.envers.repository.support.EnversRevisionRepositoryFactoryBean"/>
    <jpa:auditing auditor-aware-ref="springDataJpaAuditor"/>

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceXmlLocation" value="classpath*:/persistence.xml"/>
        <property name="packagesToScan" value="com.wwyl.entity.**"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultNamingStrategy</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.connection.isolation">2</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="net.sf.ehcache.configurationResourceName">ehcache.xml</prop>
                <!-- <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop> <prop key="hibernate.search.default.indexBase">${java.io.tmpdir}/${system.project_name}/index</prop> -->
            </props>
        </property>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean>
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- Connection Pooling Info -->
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="50"/>
        <property name="maxIdle" value="10"/>
        <property name="maxWait" value="10000"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="validationInterval" value="30000"/>
        <property name="timeBetweenEvictionRunsMillis" value="5000"/>
        <property name="removeAbandonedTimeout" value="60"/>
        <property name="removeAbandoned" value="true"/>
        <property name="logAbandoned" value="true"/>
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <property name="jmxEnabled" value="true"/>
        <property name="jdbcInterceptors"
                  value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer;org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReportJmx(threshold=10000)"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <cache:annotation-driven cache-manager="cacheManager"/>

    <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:/ehcache.xml"/>
        <property name="shared" value="true"/>
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="cacheSeconds" value="${message.cache_seconds}"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
        <property name="basenames">
            <list>
                <value>${message.common_path}</value>
            </list>
        </property>
    </bean>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
        <property name="defaultLocale" value="${locale}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
	
	 
	<!-- 定时器 保质期预警-->
	<bean id="metamorphicWarningJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" autowire="no">
		<property name="targetObject" ref="bookInventoryService" />
		<property name="targetMethod" value="metamorphicWarning" />
		<property name="concurrent" value="true"></property>
	</bean>
	<bean id="metamorphicWarningTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean" autowire="no">
		<property name="jobDetail" ref="metamorphicWarningJob" />
		<property name="cronExpression" value="0 0 0 * * ?" />
	</bean>
	<!-- // end -->
	<!-- 定时器 保管到期预警-->
	<bean id="expireWarningJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" autowire="no">
		<property name="targetObject" ref="bookInventoryService" />
		<property name="targetMethod" value="expireWarning" />
		<property name="concurrent" value="true"></property>
	</bean>
	<bean id="expireWarningTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean" autowire="no">
		<property name="jobDetail" ref="expireWarningJob" />
		<property name="cronExpression" value="0 0 0 * * ?" />
	</bean>
	<!-- // end -->
	
	<!-- 定时器 月结生成对账单，结算仓储费-->
	<bean id="accountCheckingJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" autowire="no">
		<property name="targetObject" ref="paymentService" />
		<property name="targetMethod" value="accountChecking" />
		<property name="concurrent" value="true"></property>
	</bean>
	<bean id="accountCheckingTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean" autowire="no">
		<property name="jobDetail" ref="accountCheckingJob" />
		<property name="cronExpression" value="0 0 0 * * ?" />
	</bean>
	<!-- 定时器 对账付款到期预警-->
	<bean id="accountCheckingExpireWarningJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" autowire="no">
		<property name="targetObject" ref="paymentService" />
		<property name="targetMethod" value="accountCheckingExpireWarning" />
		<property name="concurrent" value="true"></property>
	</bean>
	<bean id="accountCheckingExpireWarningTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean" autowire="no">
		<property name="jobDetail" ref="accountCheckingExpireWarningJob" />
		<property name="cronExpression" value="0 0 0 * * ?" />
	</bean>
	<!-- // end -->
	
	<!-- 客户台帐查询-->
	<bean id="standingBookDailyJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" autowire="no">
		<property name="targetObject" ref="standingBookDailyService" />
		<property name="targetMethod" value="createStandingBookDaily" />
		<property name="concurrent" value="true"></property>
	</bean>
	<bean id="standingBookDailyTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean" autowire="no">
		<property name="jobDetail" ref="standingBookDailyJob" />
		<property name="cronExpression" value="0 0 1 * * ?" />
	</bean>
	<!-- // end -->
	
	<!-- 定时器   月付-->
<!-- 	<bean id="payMonthlyJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" autowire="no">
		<property name="targetObject" ref="paymentService" />
		<property name="targetMethod" value="payMonthly" />
		<property name="concurrent" value="true"></property>
	</bean>
	<bean id="payMonthlyTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean" autowire="no">
		<property name="jobDetail" ref="payMonthlyJob" />
		<property name="cronExpression" value="0 0 0 * * ?" />
	</bean> -->
	<!-- // end -->
	
	<bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no" lazy-init="false">
		<property name="triggers">
			<list>
				<ref bean="metamorphicWarningTrigger" />
				<ref bean="expireWarningTrigger" />
				<ref bean="accountCheckingTrigger" />
				<!-- <ref bean="payMonthlyTrigger" /> -->
				<ref bean="accountCheckingExpireWarningTrigger" /> 
				<ref bean="standingBookDailyTrigger" /> 
			</list>
		</property>
	</bean>
	
	
	
	
</beans> 